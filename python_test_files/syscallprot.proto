syntax = "proto3";

package sys_rpc; 

message xRPC_message_type {
  enum Type {
    request = 0;
    response = 1;
  }
  Type type = 1;// stores whether request or response
 
  enum Procedure {
    settimeofday = 0;
    gettimeofday = 1;
  }
  Procedure procedure = 2;//indicate whether settimeofday or gettime of day func.
}
message settimeofdayRequest {
  message timeval {
    uint32 tv_sec = 1;// store time elapse since Jan 1, 1970 00:00 in seconds
    uint32 tv_usec = 2; // store time elapse since Jan 1, 1970 00:00 in microseconds
  }
  //planning to scrap timezone message, since it is now obsolete. (USAGE OF UTC)
  message timezone {
    int32 tz_minuteswest = 3;
    int32 tz_dsttime = 4;
  }
  timeval timeval_s= 1;
  timezone timezone_s = 2;//This is obsolete, maybe remove?
}
 
message settimeofdayResponse {
    sint32 return_value = 1; //stores if function call was succesful or not
    sint32 errno_alt = 2; //stores error no., if fault occurs
}

//message gettimeofdayRequest {
//    int32 stub = 1;
//}

message gettimeofdayResponse{
    message timeval {
    uint32 tv_sec = 1;
    uint32 tv_usec = 2;
    }
    //planning to scrap timezone completely, as it is obsolete
  message timezone {
    int32 tz_minuteswest = 3;
    int32 tz_dsttime = 4;
    }
  message gettimeofdayRequestStatus {
    sint32 return_value = 1;//stores if function call was succesful or not
    sint32 errno_alt = 2; //stores error no., if fault occurs
    }
    timeval timeval_r = 1;
    timezone timezone_r = 2;//Scrap this?
    gettimeofdayRequestStatus status = 3;
}
message xRPC_message{
  xRPC_message_type mes_type = 1;
  settimeofdayRequest setTimeRequest = 2;
  settimeofdayResponse setTimeResponse = 3;
//  gettimeofdayRequest getTimeRequest = 4;
  gettimeofdayResponse getTimeResponse = 4;
}


