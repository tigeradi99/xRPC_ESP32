/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: syscallprot.proto */

#ifndef PROTOBUF_C_syscallprot_2eproto__INCLUDED
#define PROTOBUF_C_syscallprot_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _SysRpc__XRPCMessageType SysRpc__XRPCMessageType;
typedef struct _SysRpc__SettimeofdayRequest SysRpc__SettimeofdayRequest;
typedef struct _SysRpc__SettimeofdayRequest__Timeval SysRpc__SettimeofdayRequest__Timeval;
typedef struct _SysRpc__SettimeofdayRequest__Timezone SysRpc__SettimeofdayRequest__Timezone;
typedef struct _SysRpc__SettimeofdayResponse SysRpc__SettimeofdayResponse;
typedef struct _SysRpc__GettimeofdayResponse SysRpc__GettimeofdayResponse;
typedef struct _SysRpc__GettimeofdayResponse__Timeval SysRpc__GettimeofdayResponse__Timeval;
typedef struct _SysRpc__GettimeofdayResponse__Timezone SysRpc__GettimeofdayResponse__Timezone;
typedef struct _SysRpc__GettimeofdayResponse__GettimeofdayRequestStatus SysRpc__GettimeofdayResponse__GettimeofdayRequestStatus;
typedef struct _SysRpc__XRPCMessage SysRpc__XRPCMessage;


/* --- enums --- */

typedef enum _SysRpc__XRPCMessageType__Type {
  SYS_RPC__X_RPC_MESSAGE_TYPE__TYPE__request = 0,
  SYS_RPC__X_RPC_MESSAGE_TYPE__TYPE__response = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SYS_RPC__X_RPC_MESSAGE_TYPE__TYPE)
} SysRpc__XRPCMessageType__Type;
typedef enum _SysRpc__XRPCMessageType__Procedure {
  SYS_RPC__X_RPC_MESSAGE_TYPE__PROCEDURE__settimeofday = 0,
  SYS_RPC__X_RPC_MESSAGE_TYPE__PROCEDURE__gettimeofday = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SYS_RPC__X_RPC_MESSAGE_TYPE__PROCEDURE)
} SysRpc__XRPCMessageType__Procedure;

/* --- messages --- */

struct  _SysRpc__XRPCMessageType
{
  ProtobufCMessage base;
  /*
   * stores whether request or response
   */
  SysRpc__XRPCMessageType__Type type;
  /*
   *indicate whether settimeofday or gettime of day func.
   */
  SysRpc__XRPCMessageType__Procedure procedure;
};
#define SYS_RPC__X_RPC_MESSAGE_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sys_rpc__x_rpc_message_type__descriptor) \
    , SYS_RPC__X_RPC_MESSAGE_TYPE__TYPE__request, SYS_RPC__X_RPC_MESSAGE_TYPE__PROCEDURE__settimeofday }


struct  _SysRpc__SettimeofdayRequest__Timeval
{
  ProtobufCMessage base;
  /*
   * store time elapse since Jan 1, 1970 00:00 in seconds
   */
  uint32_t tv_sec;
  /*
   * store time elapse since Jan 1, 1970 00:00 in microseconds
   */
  uint32_t tv_usec;
};
#define SYS_RPC__SETTIMEOFDAY_REQUEST__TIMEVAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sys_rpc__settimeofday_request__timeval__descriptor) \
    , 0, 0 }


/*
 *planning to scrap timezone message, since it is now obsolete. (USAGE OF UTC)
 */
struct  _SysRpc__SettimeofdayRequest__Timezone
{
  ProtobufCMessage base;
  int32_t tz_minuteswest;
  int32_t tz_dsttime;
};
#define SYS_RPC__SETTIMEOFDAY_REQUEST__TIMEZONE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sys_rpc__settimeofday_request__timezone__descriptor) \
    , 0, 0 }


struct  _SysRpc__SettimeofdayRequest
{
  ProtobufCMessage base;
  SysRpc__SettimeofdayRequest__Timeval *timeval_s;
  /*
   *This is obsolete, maybe remove?
   */
  SysRpc__SettimeofdayRequest__Timezone *timezone_s;
};
#define SYS_RPC__SETTIMEOFDAY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sys_rpc__settimeofday_request__descriptor) \
    , NULL, NULL }


struct  _SysRpc__SettimeofdayResponse
{
  ProtobufCMessage base;
  /*
   *stores if function call was succesful or not
   */
  int32_t return_value;
  /*
   *stores error no., if fault occurs
   */
  int32_t errno_alt;
};
#define SYS_RPC__SETTIMEOFDAY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sys_rpc__settimeofday_response__descriptor) \
    , 0, 0 }


struct  _SysRpc__GettimeofdayResponse__Timeval
{
  ProtobufCMessage base;
  uint32_t tv_sec;
  uint32_t tv_usec;
};
#define SYS_RPC__GETTIMEOFDAY_RESPONSE__TIMEVAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sys_rpc__gettimeofday_response__timeval__descriptor) \
    , 0, 0 }


/*
 *planning to scrap timezone completely, as it is obsolete
 */
struct  _SysRpc__GettimeofdayResponse__Timezone
{
  ProtobufCMessage base;
  int32_t tz_minuteswest;
  int32_t tz_dsttime;
};
#define SYS_RPC__GETTIMEOFDAY_RESPONSE__TIMEZONE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sys_rpc__gettimeofday_response__timezone__descriptor) \
    , 0, 0 }


struct  _SysRpc__GettimeofdayResponse__GettimeofdayRequestStatus
{
  ProtobufCMessage base;
  /*
   *stores if function call was succesful or not
   */
  int32_t return_value;
  /*
   *stores error no., if fault occurs
   */
  int32_t errno_alt;
};
#define SYS_RPC__GETTIMEOFDAY_RESPONSE__GETTIMEOFDAY_REQUEST_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sys_rpc__gettimeofday_response__gettimeofday_request_status__descriptor) \
    , 0, 0 }


struct  _SysRpc__GettimeofdayResponse
{
  ProtobufCMessage base;
  SysRpc__GettimeofdayResponse__Timeval *timeval_r;
  /*
   *Scrap this?
   */
  SysRpc__GettimeofdayResponse__Timezone *timezone_r;
  SysRpc__GettimeofdayResponse__GettimeofdayRequestStatus *status;
};
#define SYS_RPC__GETTIMEOFDAY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sys_rpc__gettimeofday_response__descriptor) \
    , NULL, NULL, NULL }


struct  _SysRpc__XRPCMessage
{
  ProtobufCMessage base;
  SysRpc__XRPCMessageType *mes_type;
  SysRpc__SettimeofdayRequest *settimerequest;
  SysRpc__SettimeofdayResponse *settimeresponse;
  /*
   *  gettimeofdayRequest getTimeRequest = 4;
   */
  SysRpc__GettimeofdayResponse *gettimeresponse;
};
#define SYS_RPC__X_RPC_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sys_rpc__x_rpc_message__descriptor) \
    , NULL, NULL, NULL, NULL }


/* SysRpc__XRPCMessageType methods */
void   sys_rpc__x_rpc_message_type__init
                     (SysRpc__XRPCMessageType         *message);
size_t sys_rpc__x_rpc_message_type__get_packed_size
                     (const SysRpc__XRPCMessageType   *message);
size_t sys_rpc__x_rpc_message_type__pack
                     (const SysRpc__XRPCMessageType   *message,
                      uint8_t             *out);
size_t sys_rpc__x_rpc_message_type__pack_to_buffer
                     (const SysRpc__XRPCMessageType   *message,
                      ProtobufCBuffer     *buffer);
SysRpc__XRPCMessageType *
       sys_rpc__x_rpc_message_type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sys_rpc__x_rpc_message_type__free_unpacked
                     (SysRpc__XRPCMessageType *message,
                      ProtobufCAllocator *allocator);
/* SysRpc__SettimeofdayRequest__Timeval methods */
void   sys_rpc__settimeofday_request__timeval__init
                     (SysRpc__SettimeofdayRequest__Timeval         *message);
/* SysRpc__SettimeofdayRequest__Timezone methods */
void   sys_rpc__settimeofday_request__timezone__init
                     (SysRpc__SettimeofdayRequest__Timezone         *message);
/* SysRpc__SettimeofdayRequest methods */
void   sys_rpc__settimeofday_request__init
                     (SysRpc__SettimeofdayRequest         *message);
size_t sys_rpc__settimeofday_request__get_packed_size
                     (const SysRpc__SettimeofdayRequest   *message);
size_t sys_rpc__settimeofday_request__pack
                     (const SysRpc__SettimeofdayRequest   *message,
                      uint8_t             *out);
size_t sys_rpc__settimeofday_request__pack_to_buffer
                     (const SysRpc__SettimeofdayRequest   *message,
                      ProtobufCBuffer     *buffer);
SysRpc__SettimeofdayRequest *
       sys_rpc__settimeofday_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sys_rpc__settimeofday_request__free_unpacked
                     (SysRpc__SettimeofdayRequest *message,
                      ProtobufCAllocator *allocator);
/* SysRpc__SettimeofdayResponse methods */
void   sys_rpc__settimeofday_response__init
                     (SysRpc__SettimeofdayResponse         *message);
size_t sys_rpc__settimeofday_response__get_packed_size
                     (const SysRpc__SettimeofdayResponse   *message);
size_t sys_rpc__settimeofday_response__pack
                     (const SysRpc__SettimeofdayResponse   *message,
                      uint8_t             *out);
size_t sys_rpc__settimeofday_response__pack_to_buffer
                     (const SysRpc__SettimeofdayResponse   *message,
                      ProtobufCBuffer     *buffer);
SysRpc__SettimeofdayResponse *
       sys_rpc__settimeofday_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sys_rpc__settimeofday_response__free_unpacked
                     (SysRpc__SettimeofdayResponse *message,
                      ProtobufCAllocator *allocator);
/* SysRpc__GettimeofdayResponse__Timeval methods */
void   sys_rpc__gettimeofday_response__timeval__init
                     (SysRpc__GettimeofdayResponse__Timeval         *message);
/* SysRpc__GettimeofdayResponse__Timezone methods */
void   sys_rpc__gettimeofday_response__timezone__init
                     (SysRpc__GettimeofdayResponse__Timezone         *message);
/* SysRpc__GettimeofdayResponse__GettimeofdayRequestStatus methods */
void   sys_rpc__gettimeofday_response__gettimeofday_request_status__init
                     (SysRpc__GettimeofdayResponse__GettimeofdayRequestStatus         *message);
/* SysRpc__GettimeofdayResponse methods */
void   sys_rpc__gettimeofday_response__init
                     (SysRpc__GettimeofdayResponse         *message);
size_t sys_rpc__gettimeofday_response__get_packed_size
                     (const SysRpc__GettimeofdayResponse   *message);
size_t sys_rpc__gettimeofday_response__pack
                     (const SysRpc__GettimeofdayResponse   *message,
                      uint8_t             *out);
size_t sys_rpc__gettimeofday_response__pack_to_buffer
                     (const SysRpc__GettimeofdayResponse   *message,
                      ProtobufCBuffer     *buffer);
SysRpc__GettimeofdayResponse *
       sys_rpc__gettimeofday_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sys_rpc__gettimeofday_response__free_unpacked
                     (SysRpc__GettimeofdayResponse *message,
                      ProtobufCAllocator *allocator);
/* SysRpc__XRPCMessage methods */
void   sys_rpc__x_rpc_message__init
                     (SysRpc__XRPCMessage         *message);
size_t sys_rpc__x_rpc_message__get_packed_size
                     (const SysRpc__XRPCMessage   *message);
size_t sys_rpc__x_rpc_message__pack
                     (const SysRpc__XRPCMessage   *message,
                      uint8_t             *out);
size_t sys_rpc__x_rpc_message__pack_to_buffer
                     (const SysRpc__XRPCMessage   *message,
                      ProtobufCBuffer     *buffer);
SysRpc__XRPCMessage *
       sys_rpc__x_rpc_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sys_rpc__x_rpc_message__free_unpacked
                     (SysRpc__XRPCMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SysRpc__XRPCMessageType_Closure)
                 (const SysRpc__XRPCMessageType *message,
                  void *closure_data);
typedef void (*SysRpc__SettimeofdayRequest__Timeval_Closure)
                 (const SysRpc__SettimeofdayRequest__Timeval *message,
                  void *closure_data);
typedef void (*SysRpc__SettimeofdayRequest__Timezone_Closure)
                 (const SysRpc__SettimeofdayRequest__Timezone *message,
                  void *closure_data);
typedef void (*SysRpc__SettimeofdayRequest_Closure)
                 (const SysRpc__SettimeofdayRequest *message,
                  void *closure_data);
typedef void (*SysRpc__SettimeofdayResponse_Closure)
                 (const SysRpc__SettimeofdayResponse *message,
                  void *closure_data);
typedef void (*SysRpc__GettimeofdayResponse__Timeval_Closure)
                 (const SysRpc__GettimeofdayResponse__Timeval *message,
                  void *closure_data);
typedef void (*SysRpc__GettimeofdayResponse__Timezone_Closure)
                 (const SysRpc__GettimeofdayResponse__Timezone *message,
                  void *closure_data);
typedef void (*SysRpc__GettimeofdayResponse__GettimeofdayRequestStatus_Closure)
                 (const SysRpc__GettimeofdayResponse__GettimeofdayRequestStatus *message,
                  void *closure_data);
typedef void (*SysRpc__GettimeofdayResponse_Closure)
                 (const SysRpc__GettimeofdayResponse *message,
                  void *closure_data);
typedef void (*SysRpc__XRPCMessage_Closure)
                 (const SysRpc__XRPCMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor sys_rpc__x_rpc_message_type__descriptor;
extern const ProtobufCEnumDescriptor    sys_rpc__x_rpc_message_type__type__descriptor;
extern const ProtobufCEnumDescriptor    sys_rpc__x_rpc_message_type__procedure__descriptor;
extern const ProtobufCMessageDescriptor sys_rpc__settimeofday_request__descriptor;
extern const ProtobufCMessageDescriptor sys_rpc__settimeofday_request__timeval__descriptor;
extern const ProtobufCMessageDescriptor sys_rpc__settimeofday_request__timezone__descriptor;
extern const ProtobufCMessageDescriptor sys_rpc__settimeofday_response__descriptor;
extern const ProtobufCMessageDescriptor sys_rpc__gettimeofday_response__descriptor;
extern const ProtobufCMessageDescriptor sys_rpc__gettimeofday_response__timeval__descriptor;
extern const ProtobufCMessageDescriptor sys_rpc__gettimeofday_response__timezone__descriptor;
extern const ProtobufCMessageDescriptor sys_rpc__gettimeofday_response__gettimeofday_request_status__descriptor;
extern const ProtobufCMessageDescriptor sys_rpc__x_rpc_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_syscallprot_2eproto__INCLUDED */
