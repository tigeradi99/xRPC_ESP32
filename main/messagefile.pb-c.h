/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: messagefile.proto */

#ifndef PROTOBUF_C_messagefile_2eproto__INCLUDED
#define PROTOBUF_C_messagefile_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _TimeVal TimeVal;
typedef struct _SettimeofdayRequest SettimeofdayRequest;
typedef struct _SettimeofdayResponse SettimeofdayResponse;
typedef struct _GettimeofdayRequest GettimeofdayRequest;
typedef struct _GettimeofdayResponse GettimeofdayResponse;
typedef struct _Request Request;
typedef struct _Response Response;
typedef struct _XRPCMessage XRPCMessage;


/* --- enums --- */


/* --- messages --- */

struct  _TimeVal
{
  ProtobufCMessage base;
  /*
   * store time elapse since Jan 1, 1970 00:00 in seconds
   */
  protobuf_c_boolean has_tv_sec;
  uint32_t tv_sec;
  /*
   * store time elapse since Jan 1, 1970 00:00 in microseconds
   */
  protobuf_c_boolean has_tv_usec;
  uint32_t tv_usec;
};
#define TIME_VAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&time_val__descriptor) \
    , 0,0, 0,0 }


struct  _SettimeofdayRequest
{
  ProtobufCMessage base;
  TimeVal *timeval;
};
#define SETTIMEOFDAY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&settimeofday_request__descriptor) \
    , NULL }


struct  _SettimeofdayResponse
{
  ProtobufCMessage base;
  /*
   *stores if function call was succesful or not
   */
  protobuf_c_boolean has_return_value;
  int32_t return_value;
  /*
   *stores error no., if fault occurs
   */
  protobuf_c_boolean has_errno_alt;
  int32_t errno_alt;
};
#define SETTIMEOFDAY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&settimeofday_response__descriptor) \
    , 0,0, 0,0 }


struct  _GettimeofdayRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_stub;
  int32_t stub;
};
#define GETTIMEOFDAY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gettimeofday_request__descriptor) \
    , 0,0 }


struct  _GettimeofdayResponse
{
  ProtobufCMessage base;
  /*
   *planning to scrap timezone completely, as it is obsolete
   */
  /*
   *stores if function call was succesful or not
   */
  protobuf_c_boolean has_return_value;
  int32_t return_value;
  protobuf_c_boolean has_errno_alt;
  int32_t errno_alt;
  TimeVal *timeval;
};
#define GETTIMEOFDAY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gettimeofday_response__descriptor) \
    , 0,0, 0,0, NULL }


typedef enum {
  REQUEST__REQUEST_FUNC__NOT_SET = 0,
  REQUEST__REQUEST_FUNC_SETTIMEOFDAY_REQUEST = 1,
  REQUEST__REQUEST_FUNC_GETTIMEOFDAY_REQUEST = 2,
} Request__RequestFuncCase;

struct  _Request
{
  ProtobufCMessage base;
  Request__RequestFuncCase request_func_case;
  union {
    SettimeofdayRequest *settimeofday_request;
    GettimeofdayRequest *gettimeofday_request;
  };
};
#define REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&request__descriptor) \
    , REQUEST__REQUEST_FUNC__NOT_SET, {0} }


typedef enum {
  RESPONSE__RESPONSE_FUNC__NOT_SET = 0,
  RESPONSE__RESPONSE_FUNC_SETTIMEOFDAY_RESPONSE = 1,
  RESPONSE__RESPONSE_FUNC_GETTIMEOFDAY_RESPONSE = 2,
} Response__ResponseFuncCase;

struct  _Response
{
  ProtobufCMessage base;
  Response__ResponseFuncCase response_func_case;
  union {
    SettimeofdayResponse *settimeofday_response;
    GettimeofdayResponse *gettimeofday_response;
  };
};
#define RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__descriptor) \
    , RESPONSE__RESPONSE_FUNC__NOT_SET, {0} }


typedef enum {
  X_RPCMESSAGE__MESSAGE_TYPE__NOT_SET = 0,
  X_RPCMESSAGE__MESSAGE_TYPE_REQUEST = 1,
  X_RPCMESSAGE__MESSAGE_TYPE_RESPONSE = 2,
} XRPCMessage__MessageTypeCase;

struct  _XRPCMessage
{
  ProtobufCMessage base;
  TimeVal *time_stamp;
  XRPCMessage__MessageTypeCase message_type_case;
  union {
    Request *request;
    Response *response;
  };
};
#define X_RPCMESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&x_rpcmessage__descriptor) \
    , NULL, X_RPCMESSAGE__MESSAGE_TYPE__NOT_SET, {0} }


/* TimeVal methods */
void   time_val__init
                     (TimeVal         *message);
size_t time_val__get_packed_size
                     (const TimeVal   *message);
size_t time_val__pack
                     (const TimeVal   *message,
                      uint8_t             *out);
size_t time_val__pack_to_buffer
                     (const TimeVal   *message,
                      ProtobufCBuffer     *buffer);
TimeVal *
       time_val__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   time_val__free_unpacked
                     (TimeVal *message,
                      ProtobufCAllocator *allocator);
/* SettimeofdayRequest methods */
void   settimeofday_request__init
                     (SettimeofdayRequest         *message);
size_t settimeofday_request__get_packed_size
                     (const SettimeofdayRequest   *message);
size_t settimeofday_request__pack
                     (const SettimeofdayRequest   *message,
                      uint8_t             *out);
size_t settimeofday_request__pack_to_buffer
                     (const SettimeofdayRequest   *message,
                      ProtobufCBuffer     *buffer);
SettimeofdayRequest *
       settimeofday_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   settimeofday_request__free_unpacked
                     (SettimeofdayRequest *message,
                      ProtobufCAllocator *allocator);
/* SettimeofdayResponse methods */
void   settimeofday_response__init
                     (SettimeofdayResponse         *message);
size_t settimeofday_response__get_packed_size
                     (const SettimeofdayResponse   *message);
size_t settimeofday_response__pack
                     (const SettimeofdayResponse   *message,
                      uint8_t             *out);
size_t settimeofday_response__pack_to_buffer
                     (const SettimeofdayResponse   *message,
                      ProtobufCBuffer     *buffer);
SettimeofdayResponse *
       settimeofday_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   settimeofday_response__free_unpacked
                     (SettimeofdayResponse *message,
                      ProtobufCAllocator *allocator);
/* GettimeofdayRequest methods */
void   gettimeofday_request__init
                     (GettimeofdayRequest         *message);
size_t gettimeofday_request__get_packed_size
                     (const GettimeofdayRequest   *message);
size_t gettimeofday_request__pack
                     (const GettimeofdayRequest   *message,
                      uint8_t             *out);
size_t gettimeofday_request__pack_to_buffer
                     (const GettimeofdayRequest   *message,
                      ProtobufCBuffer     *buffer);
GettimeofdayRequest *
       gettimeofday_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gettimeofday_request__free_unpacked
                     (GettimeofdayRequest *message,
                      ProtobufCAllocator *allocator);
/* GettimeofdayResponse methods */
void   gettimeofday_response__init
                     (GettimeofdayResponse         *message);
size_t gettimeofday_response__get_packed_size
                     (const GettimeofdayResponse   *message);
size_t gettimeofday_response__pack
                     (const GettimeofdayResponse   *message,
                      uint8_t             *out);
size_t gettimeofday_response__pack_to_buffer
                     (const GettimeofdayResponse   *message,
                      ProtobufCBuffer     *buffer);
GettimeofdayResponse *
       gettimeofday_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gettimeofday_response__free_unpacked
                     (GettimeofdayResponse *message,
                      ProtobufCAllocator *allocator);
/* Request methods */
void   request__init
                     (Request         *message);
size_t request__get_packed_size
                     (const Request   *message);
size_t request__pack
                     (const Request   *message,
                      uint8_t             *out);
size_t request__pack_to_buffer
                     (const Request   *message,
                      ProtobufCBuffer     *buffer);
Request *
       request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   request__free_unpacked
                     (Request *message,
                      ProtobufCAllocator *allocator);
/* Response methods */
void   response__init
                     (Response         *message);
size_t response__get_packed_size
                     (const Response   *message);
size_t response__pack
                     (const Response   *message,
                      uint8_t             *out);
size_t response__pack_to_buffer
                     (const Response   *message,
                      ProtobufCBuffer     *buffer);
Response *
       response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   response__free_unpacked
                     (Response *message,
                      ProtobufCAllocator *allocator);
/* XRPCMessage methods */
void   x_rpcmessage__init
                     (XRPCMessage         *message);
size_t x_rpcmessage__get_packed_size
                     (const XRPCMessage   *message);
size_t x_rpcmessage__pack
                     (const XRPCMessage   *message,
                      uint8_t             *out);
size_t x_rpcmessage__pack_to_buffer
                     (const XRPCMessage   *message,
                      ProtobufCBuffer     *buffer);
XRPCMessage *
       x_rpcmessage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   x_rpcmessage__free_unpacked
                     (XRPCMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*TimeVal_Closure)
                 (const TimeVal *message,
                  void *closure_data);
typedef void (*SettimeofdayRequest_Closure)
                 (const SettimeofdayRequest *message,
                  void *closure_data);
typedef void (*SettimeofdayResponse_Closure)
                 (const SettimeofdayResponse *message,
                  void *closure_data);
typedef void (*GettimeofdayRequest_Closure)
                 (const GettimeofdayRequest *message,
                  void *closure_data);
typedef void (*GettimeofdayResponse_Closure)
                 (const GettimeofdayResponse *message,
                  void *closure_data);
typedef void (*Request_Closure)
                 (const Request *message,
                  void *closure_data);
typedef void (*Response_Closure)
                 (const Response *message,
                  void *closure_data);
typedef void (*XRPCMessage_Closure)
                 (const XRPCMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor time_val__descriptor;
extern const ProtobufCMessageDescriptor settimeofday_request__descriptor;
extern const ProtobufCMessageDescriptor settimeofday_response__descriptor;
extern const ProtobufCMessageDescriptor gettimeofday_request__descriptor;
extern const ProtobufCMessageDescriptor gettimeofday_response__descriptor;
extern const ProtobufCMessageDescriptor request__descriptor;
extern const ProtobufCMessageDescriptor response__descriptor;
extern const ProtobufCMessageDescriptor x_rpcmessage__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_messagefile_2eproto__INCLUDED */
